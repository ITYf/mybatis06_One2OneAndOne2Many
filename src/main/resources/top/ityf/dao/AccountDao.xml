<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.ityf.dao.AccountDao">

    <!--方法一：多表查询之一对一关系映射-->
    <!--首先定义封装account和user的resultMap-->
    <resultMap id="accountUserMap" type="account">
        <id property="id" column="id"></id>
        <result property="uid" column="uid"></result>
        <result property="money" column="money"></result>
        <!--一对一的关系映射，配置封装user的内容-->
        <association property="user" column="uid" javaType="user">
            <id property="id" column="uid"></id>
            <result property="username" column="username"></result>
            <result property="address" column="address"></result>
            <result property="sex" column="sex"></result>
            <result property="birthday" column="birthday"></result>
        </association>
    </resultMap>
    <!--查询所有账户，同时包含用户名和地址信息-->
    <select id="findAll" resultMap="accountUserMap">  <!--resultType不区分大小写-->
        select a.*,u.username,u.address,u.sex,u.birthday from account a,user u where u.id=a.uid;
    </select>


    <!--方法二：多表查询-->
    <!-- 定义一个accountUser实体类，把查询结果封装到该实体类 -->
    <!--查询所有账户，同时包含用户名和地址信息-->
    <select id="findAllAccount" resultType="top.ityf.domain.AccountUser">
        select a.*,u.username,u.address from account a,user u where u.id=a.uid;
    </select>

</mapper>